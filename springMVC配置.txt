spring配置


1.导包
	
2.配置web.xml文件

<!--配置一：拦截图片-->
  <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
<!--配置二：servlet-->
<servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
			<!--此处为要创建的springmvc.xml配置文件名字，请创建在src下面-->
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
</servlet-mapping>

<!--配置三:编码格式-->
<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
		<param-name>encoding</param-name>
		<param-value>utf-8</param-value>
		</init-param>
		</filter>
		<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
</filter-mapping>
<!--配置四：支持put/delete转为Post方式-->
<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
</filter-mapping>


3.配置springmvc.xml文件(建在src目录下)

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!--配置自动扫描的路径-->
    <context:component-scan base-package="employee.controller"/>
	
	<!--自定义视图解析器-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="99"></property>
	</bean>
	
	<!--配置视图解析器-->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/jsp/"/>
    	<property name="suffix" value=".jsp"/>
	</bean>
    
    <!--配置国际化资源-->
    <bean id="messageSource"
            class="org.springframework.context.support.ResourceBundleMessageSource">
     	<property name="basename" value="i18n"></property>
     </bean>
	
	<!-- 从本次请求参数中获取本地资源配置 locale=en_US这个参数 -->
     <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
     <!-- 从session中获取本地化配置 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
	
	<mvc:interceptors>
	<!-- 配置国际化资源拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<ref bean="localeChangeInterceptor"/>
		</mvc:interceptor>
		<!--配置登录拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!--不拦截-->
			<mvc:exclude-mapping path="/login"/>
			<!--不拦截 登录方法doLogin-->
			<mvc:exclude-mapping path="/doLogin"/>
			<bean class="employee.interceptors.LoginInterceptor"></bean>
		</mvc:interceptor>
	
	</mvc:interceptors>
	
	<!--配置文件上传-->
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	<!--返回json数据类型-->
	<mvc:annotation-driven />

</beans>

4.拦截的配置(在src下新建个包interceptors)
package employee.interceptors;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;
import employee.bean.EmpBean;

public class LoginInterceptor implements HandlerInterceptor{
//	登录拦截器
	@Override
	public void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception arg3)
			throws Exception {
	}

	
	public void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3)
			throws Exception {
	}

	@Override
	public boolean preHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2) throws Exception {
		//获取登录信息
		EmpBean empBean = (EmpBean) arg0.getSession().getAttribute("e");
		if (empBean == null) {
			arg0.getRequestDispatcher("login").forward(arg0, arg1);
			return false;
		}
		return true;
	}
}
